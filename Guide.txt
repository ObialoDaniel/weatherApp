To build a weather app using the OpenWeather API with HTML, CSS, and JavaScript, follow these steps:

### Step 1: Get an API Key from OpenWeather
1. Sign up at [OpenWeather](https://home.openweathermap.org/users/sign_up).
2. Go to the API keys section and generate a new API key.

### Step 2: Set Up Your Project Structure
Create a project directory with the following files:
- index.html
- style.css
- script.js

### Step 3: Create the HTML Structure

Create the index.html file with the following content:

html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <h1>Weather App</h1>
        <input type="text" id="locationInput" placeholder="Enter location">
        <button id="searchButton">Search</button>
        <div id="weatherResult"></div>
    </div>
    <script src="script.js"></script>
</body>
</html>


### Step 4: Style the App

Create the style.css file with the following content:

css
body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

.container {
    background: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    text-align: center;
}

#locationInput {
    padding: 10px;
    margin-bottom: 10px;
    width: 80%;
    border: 1px solid #ccc;
    border-radius: 4px;
}

#searchButton {
    padding: 10px 20px;
    border: none;
    background-color: #007BFF;
    color: white;
    border-radius: 4px;
    cursor: pointer;
}

#searchButton:hover {
    background-color: #0056b3;
}

#weatherResult {
    margin-top: 20px;
}


### Step 5: Implement the JavaScript Logic

Create the script.js file with the following content. Replace YOUR_API_KEY with your actual API key from OpenWeather.

javascript
document.getElementById('searchButton').addEventListener('click', function() {
    const location = document.getElementById('locationInput').value;
    const apiKey = 'YOUR_API_KEY';
    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${apiKey}`;

    fetch(apiUrl)
        .then(response => response.json())
        .then(data => {
            if (data.cod === 200) {
                const temperature

javascript
                = data.main.temp;
                const weatherDescription = data.weather[0].description;
                const weatherResultDiv = document.getElementById('weatherResult');

                weatherResultDiv.innerHTML = `
                    <h2>${data.name}</h2>
                    <p>Temperature: ${temperature}°C</p>
                    <p>Weather: ${weatherDescription}</p>
                `;
            } else {
                document.getElementById('weatherResult').innerHTML = <p>Location not found.</p>;
            }
        })
        .catch(error => {
            console.error('Error fetching weather data:', error);
            document.getElementById('weatherResult').innerHTML = <p>Error fetching weather data.</p>;
        });
});


### Explanation of the JavaScript Code:

1. **Event Listener**: An event listener is added to the search button to trigger a function when it's clicked.
2. **Fetch Data**: When the button is clicked, it retrieves the value from the input field, constructs the API URL, and uses the Fetch API to get the weather data.
3. **Process Response**: The response is processed as JSON. If the API returns a successful response (`cod === 200`), it displays the temperature and weather description. If the location is not found, it shows an error message.
4. **Error Handling**: Any errors during the fetch request are caught and an error message is displayed.

### Full Project Code:

#### `index.html`
html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <h1>Weather App</h1>
        <input type="text" id="locationInput" placeholder="Enter location">
        <button id="searchButton">Search</button>
        <div id="weatherResult"></div>
    </div>
    <script src="script.js"></script>
</body>
</html>


#### `style.css`
css
body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

.container {
    background: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    text-align: center;
}

#locationInput {
    padding: 10px;
    margin-bottom: 10px;
    width: 80%;
    border: 1px solid #ccc;
    border-radius: 4px;
}

#searchButton {
    padding: 10px 20px;
    border: none;
    background-color: #007BFF;
    color: white;
    border-radius: 4px;
    cursor: pointer;
}

#searchButton:hover {
    background-color: #0056b3;
}

#weatherResult {
    margin-top: 20px;
}


#### `script.js`
javascript
document.getElementById('searchButton').addEventListener('click', function() {
    const location = document.getElementById('locationInput').value;
    const apiKey = 'YOUR_API_KEY';
    const apiUrl = https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${apiKey};

    fetch(apiUrl)
        .then(response => response.json())
        .then(data => {
            if (data.cod === 200) {
                const temperature = data.main.temp;
                const weatherDescription = data.weather[0].description;
                const weatherResultDiv = document.getElementById('weatherResult');

                weatherResultDiv.innerHTML = `
                    <h2>${data.name}</h2>
                    <p>Temperature: ${temperature}°C</p>
                    <p>Weather: ${weatherDescription}</p>
                `;
            } else {
                document.getElementById('weatherResult').innerHTML = <p>Location not found.</p>;
            }
        })
        .catch(error => {
            console.error('Error fetching weather data:', error);
            document.getElementById('weatherResult').innerHTML = <p>Error fetching weather data.</p>;
        });
});
```

This project sets up a simple yet functional weather app using the OpenWeather API. Users can search for the current temperature and weather description of any location.
